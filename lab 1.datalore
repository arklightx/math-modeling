{
  "version":"1.0",
  "data":{
    "sheets":[
      {
        "name":"Sheet",
        "blocks":[
          {
            "type":"CODE",
            "text":"import math\nimport numpy as np\nimport random\nimport matplotlib.pyplot as plt\nimport seaborn as sbn",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"def generate_random_float_list(n):\n    lst = []\n    for i in range(n):\n        lst.append(round(random.uniform(0, 1), 4))\n    return lst",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"def default_rand(use_test=False):\n    tests = [10 ** 2, 10 ** 3, 10 ** 4]\n    for test in tests:\n        arr = np.around(np.array(generate_random_float_list(test)), 4)\n        if not use_test:\n            print(\"----------\")\n            print(\"Test \", test)\n            print(\"Average \", np.mean(arr))\n            print(\"Variance \", np.var(arr))\n            print(\"Sqrt variance \", np.std(arr))\n            generate_graphics(arr)\n    print(\"\\n\\n\\n-----------------------------------\")",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"def generate_next_digit(a, b):\n    c = str(round(a * b, 8)).split(\".\")[1]\n    next_digit = c[2:6]\n    return float(\"0.\" + next_digit)",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"def my_rand(use_test=False):\n    tests = [10 ** 2, 10 ** 3, 10 ** 4]\n    for test in tests:\n        arr = [round(random.uniform(0.0001, 1), 4), round(random.uniform(0.0001, 1), 4)]\n        for i in range(2, test):\n            # np.append(arr, generate_next_digit(arr[i-1], arr[i-2]))\n            arr.append(generate_next_digit(arr[i - 1], arr[i - 2]))\n        print(\"---------------------------------\")\n        print(\"Мат. ожидание \", np.mean(arr))\n        if not use_test:\n            print(\"Дисперсия \", np.var(arr))\n            print(\"Отклонение \", np.std(arr))\n            generate_graphics(arr)",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"def generate_graphics(lst):\n    y = len(lst)\n    x = lst\n    fig, ax = plt.subplots()\n    ax.hist(x, y)\n    fig.set_figwidth(20)\n    fig.set_figheight(8)\n    plt.rcParams.update({\"font.size\": 22})\n    # plt.figure(figsize=(25, 15))\n    # plt.hist(x, y)\n    plt.show()",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"def generate_test_graphic(lst):\n    x = lst\n    y = np.arange(-1, 1, 0.2)\n    plt.plot(y, x)\n    plt.show()",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"def test_def_rand():\n    print(\"Def Rand\")\n    lst_static_mean = []\n    lst_dynamic_mean = []\n    for i in range(10):\n        arr = np.around(np.array(generate_random_float_list(1000)), 4)\n        lst_static_mean.append(np.mean(arr))\n    for i in range(10):\n        arr = np.around(np.array(generate_random_float_list(1000 * (i + 1))), 4)\n        lst_dynamic_mean.append(np.mean(arr))\n    lst_dynamic_mean = np.array(lst_dynamic_mean) - 0.5\n    lst_static_mean = np.array(lst_static_mean) - 0.5\n    generate_test_graphic(lst_static_mean)\n    generate_test_graphic(lst_dynamic_mean)\n    print(lst_static_mean, lst_dynamic_mean)",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"def test_my_rand():\n    print(\"My Rand\")\n    lst_static_mean = []\n    lst_dynamic_mean = []\n    for i in range(10):\n        arr = [round(random.uniform(0.0001, 1), 4), round(random.uniform(0.0001, 1), 4)]\n        for j in range(2, 1000):\n            arr.append(generate_next_digit(arr[j - 1], arr[j - 2]))\n        lst_static_mean.append(np.mean(arr))\n    for i in range(10):\n        arr = [round(random.uniform(0.0001, 1), 4), round(random.uniform(0.0001, 1), 4)]\n        for j in range(2, 1000 * (i + 1)):\n            arr.append(generate_next_digit(arr[j - 1], arr[j - 2]))\n        lst_dynamic_mean.append(np.mean(arr))\n    lst_dynamic_mean = np.array(lst_dynamic_mean)\n    lst_static_mean = np.array(lst_static_mean)\n    generate_test_graphic(lst_static_mean)\n    generate_test_graphic(lst_dynamic_mean)\n    print(lst_static_mean, lst_dynamic_mean)\n    print(lst_static_mean - 0.5, lst_dynamic_mean - 0.5)",
            "outputs":[
              {
                "stdout":"",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          },
          {
            "type":"CODE",
            "text":"# default_rand()\n# my_rand()\n# test_def_rand()\ntest_my_rand()",
            "outputs":[
              {
                "stdout":"My Rand\n[0.1168586 0.1192452 0.4966064 0.1980258 0.5081547 0.4095847 0.2167979\n 0.511971  0.1905844 0.3742787] [0.1903439  0.50346945 0.0011578  0.13770465 0.05001582 0.0943894\n 0.02341029 0.15376376 0.0685905  0.06416588]\n[-0.3831414 -0.3807548 -0.0033936 -0.3019742  0.0081547 -0.0904153\n -0.2832021  0.011971  -0.3094156 -0.1257213] [-0.3096561   0.00346945 -0.4988422  -0.36229535 -0.44998418 -0.4056106\n -0.47658971 -0.34623624 -0.4314095  -0.43583412]\n",
                "stderr":"",
                "outputReprs":[
                  
                ],
                "displayData":[
                  {
                    "image":"iVBORw0KGgoAAAANSUhEUgAAAYcAAAECCAYAAAAVYxsVAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAAA6rElEQVR4nO3deXxjWXkn\/N\/RaluWJXnfZLtrc7k2uexqAumQbmi2hu4qujswbyDvDLNlEhom75CZQPaeJEMgJEwmA2TC+yb5fJIJyUB3Nb2wNBBoaJrVtuzarKquxZJsS161edN63j90r8stS7JkX+kuer6fjz+qkuSrI9nWo3uec56Hcc5BCCGE7KSTewCEEEKUh4IDIYSQXSg4EEII2YWCAyGEkF0oOBBCCNnFIPcApNDa2soHBgbkHgYhhKjK+Pj4Mue8Ld9tmggOAwMDGBsbk3sYhBCiKowxb6HbaFqJEELILhQcCCGE7ELBgRBCyC4UHAghhOxCwYEQQsguFBwIIYTsQsGBEELILhQcCCGqsRjdwlcuBeQeRk2g4EAIUY3\/9d3beOILE1iMbck9FM2j4EBIAf\/4Ex+m\/GG5h0F2GPeuAgAu+SMyj0T7KDgQksd6PIXffuYyfvnvxxDZSMo9HAJgM5HG1fkoAODSbFjewdQACg6E5HFpNoIMBxaicfzec1fkHg4BMDUbRirDoWPA5CydOVQaBQdC8nD7QwCAf3PfPXh2ch4vXJqXeURk3Jv9mbz9ZCem\/GFwzmUekbZRcCAkj0lfGPe0WvBb7zwOl9OO3\/nyFSxGKQkqp7GZVRxpb8TPH2tDZDMJ78qG3EPSNAoOhOTgnMPtD2PYaYdBr8On3+vCZiKNj128TJ9WZZLJcEz4wjjX74Cr1w4gO81EKoeCA9n24tUgfvfLNL8+F97EUiyOs312AMDhtkZ87KHj+LZnEf\/np355B1ejbi2tIbKZxGi\/A8c6GlFn1GGSVpJVFAUHsu2p8Vn8\/Y+8WF1PyD0UWbl9YQDAWadj+7p\/9YYB\/OzhFvzhC9fgX6XpjGobE\/INo\/0OGPQ6nO6x4RIlpSuKggPZ5glmlwlOCH+ItcrtC8Ns0OF4l3X7Op2O4VPvcUHHGH79S1PIZGh6qZrGvSG0WEy4p9UCAHD12nFlLoJkOiPzyLSLggMBAKzFU\/CvbgIAxn21HRwm\/SGc6bXBqH\/tn0ePvR6\/f\/4kfnJnFX\/zyh2ZRlebxr0hjPQ7wBgDALicdsRTGVwPxmQemXZRcCAAsP1Hptex7SWDtSieSuPKfBTDTnve2x8f6cHbTnTgT168jhsL9MZUDStrcdxZXsdo\/91pPkpKVx4FBwLg7pTSW4baMeUP1+zp+nQghkQqg7N9jry3M8bw8cdOw2o24CNfnKzZ16maxA8r53YEB2dzPRwNRipvUkEUHAgAwBOIwWo24BFXN+KpDK4JZQpqjVuYUhNXKuXT2mjGf3v0NK7MRfE\/v32zSiOrXePeEEx6HU712LavY4zB5bRjimosVQwFBwIge+Yw2GndPnWv1amlSX8YnU116LLVF73fO0514rGRHnz2Ozfp02uFjXtDONXThDqj\/jXXu3rteHUxhvV4SqaRaRsFBwLOOTyBGI53WdFlq0ePvb5mk9JuX7joWcNOv\/\/ISXRYzfhPX5zEVjJd2YHVqHgqjUtzEZwbaN5127DTjgwHrszR2UMlUHAgmAtvIhZP4XhnEwBgpN9Rk8tZl9fi8K1uFExG57LVG\/Gp97hwe2kdn\/y6p7KDq1FX5iJIpDIYyZMDOtObnWaipHRlUHAg8ASyq26GhHX9o312BCJbmA9vyjmsqpsUN78VSEbnc9+RVnzgZwfwt6\/M4Ae3lis0sto1vmPzW66WRjN6HfWUd6gQCg4E14Ulmcc6hODQnz2Fr7W8g9sfgl7HcHpH4rMUH33HcRxqteC\/fOkSolvU+0FKYzMhDLQ0oM1qznu7y2mnMhoVQsGBYDoQhbO5HtY6IwDgeJcV9UZ9zQWHSX8YQ11W1Jv0e995h3qTHn\/2XhcCkU38wfPXKjS62sM5x4Qvu\/mtkOFe+3YtLCItCg4EnmBsO98AAEa9Di6nDRM1lJROZzim\/JHX1FMqx9k+B5540xE8NT6Lb1wNSjy62uRd2cDyWgLn+ncno0UuIT9EneGkR8Ghxm0l07i9tIbjndbXXD\/a78DV+Sg2ErWxTPDm4hrW4qmSk9H5fPjNR3Gyuwm\/9cxlrKzRJ9mDGiuSbxCd6mmCjgFTVIRPchQcatzNxTVkOF5z5gBk\/yDTGV4zlS9L2fy2F5NBh0+\/dxjRzRR+6xnq\/XBQ494QmuoMONreWPA+DSYDjnVYaa9JBVBwqHHTgexO6J0VSIG75aprZWrJ7QvDVm\/crvq5X4OdVvz6247hxasLeMY9J9HoatO4dxUj\/Q7odKzo\/YaddkzNUttQqVFwqHGeYAxmgw4DLa99U3RYTDjcZqmZ\/Q6T\/uzmN7Hq50H8uzcewr0DDvz+c1drbjmwVCIbSdxYWMNoCcuKz\/TaEd5Iwkd9NiRFwaHGXQ\/GMNhphT7Pp7PRfgfGvSHNfyKLbSVxYzG272R0Lr2O4c\/eM4x0huO\/PEW9H\/Zjwi\/kGwb2\/pm4nNmlx7SkVVoUHGqcJxjdlYwWjfY7ENpI4s7yepVHVV2XZiPgHBg+QL4hV19LA37nXSfwys0V\/P2PvJIdt1aMz2T3nJSyQOBYhxV1Rh1thpMYBYcathSLY3ktsSsZLaqVInxiMnpY6BEglV98nRMPDLbhj782jdtLa5IeW+vGvSGc6GpCg8mw532Neh1OddtoOavEKDjUMLGHQ6Ezh0OtjbDVGzWflHb7wjjcZoGtwSjpcRlj+OTjZ2A26PGRL04hRb0fSpJMZzDpDxddwprL5bTjyjy1DZUSBYcaJtZUGiwQHHQ6hpE+u6bPHDjnQjJamnxDro6mOvzRu09h0h\/GX33vdkUeQ2umA1FsJtNlB4etZIa680mIgkMNmw5G0W41o6Uxf90aIDu1dGNhDZFNbdYM8q9uYmU9caD9DXt5xNWNh8904c+\/dQNX52lefC\/bnd9KSEaLXGKFVso7SIaCQw27HozheFf+fINIrGvj1ujUkltYFXOQndGl+MMLp+BoMOEj\/2cK8RT1fihmzBtCj71+z4ZLO\/U1N8BObUMlRcGhRqXSGby6sIahAlNKIlevHXod0+x+B7cvjHqjHoMdxV+Hg3JYTPjk42dwfSGGT3\/zRkUfS8045xifKV5sLx\/GGFy9durtICEKDjXqzvI6EunMrp3RuSxmA4a6rJrtDOf2hXCm1waDvvJ\/Cm863o5ffF0fPv+92\/jpzGrFH0+N5iNbCEa3cK7M4ABk8w43FmI1Uw+s0ig41KjpYDZxV2gZ604jfQ5M+sKaW22zlUzjWiBasWR0Pr\/zriE4HQ349S9OUe\/jPMaEoFlOMlo07LQJbUOjUg+rJlFwqFGeQBQGHcPhtsJFzUSj\/Q6sJ9LbTYG04up8FMk0r2gyOpfFbMCfvscFf2gD\/+2r01V7XLWY8IbQYNIXXF5dzBlhnwrlHaRBwaFGeYIxHG5rhMmw96+A2L9Xa3mH7UqsFU5G53rdPc345Tcewhd+7MN3ri9W9bGVbswbwtk++76m+VqFtqGTlHeQBAWHGuUJRPfMN4h6HfVot5o1t9\/B7Q+jx16P9qa6qj\/2f3rrMRzraMRHn7qE8Eai6o+vRGvxFKYD0ZKK7RXi6rXTmYNEKDjUoMhmEvORrZLyDUB2Jchov0NzSelJX1jSekrlqDPq8en3DmN1PYHfe\/aqLGNQmil\/GBkOjA4U7vy2F5fThtnQJpap2dKBUXCoQdfFZHSJZw5ANu\/gX93EYnSrUsOqqsXoFubCm1WfUtrpVI8Nv\/bgUTw3NY\/np+ZlG4dSjM2EwNjBGi65hLwD1Vk6OAoONUisqTRU4pkDcHcznFbqLLmFqYdqrlTK51cfOAyX047fffaKZgLvfo15VzHYYUVT3f5rXJ3qsWXbhtJO6QOj4FCDpgMx2BuM6GgqXDYj18nuJpgMOs3kHdy+MIx6hpPdpQfISjDodfj0e13YSqbx0acvab53RiHpDMekr7xie\/lYzELbUDpzODAKDjXIE4xisMNaVtczs0GPMz02DQWHbEnoOqNe7qHgcFsjPvaO4\/jO9SX800\/9cg9HFjcWYojFUwcODsDdpHStBlqpUHCoMZkMx\/VgDEN71FTKZ7TfgStzUWwl1V0bKJXO4NJsRPYppZ3+5RsGcN+RFvzRC9fgW6m9dpfbxfb695+MFp1x2hDaSMK\/Si1aD4KCQ43xhzawkUjva5PRSL8DiXRG9ZVFbyysYTOZrurmt73odAyf+gUXdIzhP39pCukaay067g2hzWqGs7n0YnuFiElp2u9wMBQcaoxne6VS+WcO4mY4tU8tiZVYpeoZLZVuez2ePH8SP5lZxV9\/v7Z6P4x5VzHa5yhrqrOQwU4rzAYd7Xc4IAoONcYTiIEx4FjH3mUzcrVZzehvaVB\/cPCF0WwxSfIpVWqPjfTgbSc68Kcv3thecqx1i9Et+Fc3y+rfUIxRr8OpHmobelAUHGqMJxjFQIulpN68+Yz2OTDhU3eyz+0L4azTLsmnVKkxxvDxx07DWmfAR744iURKW8UO8xE\/bEiRjBa5eu24PBfRXLHIaqLgUGM8wdi+8g2ikX4HlmJxzIbUmeyLbCRxa2ldUfmGXK2NZnz8sdO4Oh\/FZ779qtzDqbgxbwhmgw4nu22SHdPltAltQ9ckO2atKTs4MMbexxh7mTEWYYytMcbGGGNPMMYOHGgYY7\/MGOPC12cOejzyWhuJFGZW1gv2jC6F+OlOrVNL4vp3Ja1UyuftJzvx+EgvPvvSLUxqfO583BuCq9deUhHIUomd\/Wi\/w\/6V9dNgjH0WwD8AOAfgZQDfBHAMwGcAPHWQAMEY6wfwpwDUO1+hcDcW1sB5aT0cCjnWYUWj2aDa4OD2hcEYcKZXuk+plfL750+gw2rGR744ic2EupcPF7KVTOPqfKTszm97obahB1fymzlj7HEAHwQQBHCGc\/4w5\/xRAEcBTAN4FMCH9zMIlp38\/WthPH+3n2OQvXkCQtmMMmoq5dLrGM722dUbHPwhHG1vhPUAJRqqpanOiE+9x4XbS+v4hx975R5ORVyajSCZ5vvq\/FYMYwxneu2aP+uqpHI+6f+mcPlRzvn2RCjnfAHArwr\/\/dg+zx5+BcCDwmPM7OP7SQk8wRgaTHo4HQ0HOs5InwOeYBRrKutkxjnHpD+suCWsxdx3pBWneprwnEYL8415s53fpD5zAIDhXhu1DT2Akt7IGWO9AEYBJAB8Kfd2zvl3AcwB6ATw+nIGwBi7B8CfAPg+stNTpEI8wSgGO63Q6Q62Sme034EMV1\/HrZmVDYQ3kopORudzwdWDS7MR3Flel3sokhufCeFQmwXNFpPkx3Y57cjwbMc\/Ur5SP+WfFS6vcs4LLVP5ac599yRMJ\/0NAAOAf8vVvD5S4TjnwkqlgxeaG+6zgzH1JaW3O78pPBmd62FXFxgDnpvU1tkD5xzjvpDkU0oiaht6MKUGh3uEy2ITn76c+5biQwAeAPAk5\/xGGd9HyrQQjSO8kTxQvkHUVGfEYIdVhcEhjEazAUfay98AKKcuWz1+5p5mPDs1p+r9JbluLa0jvJGUpJ5SPm1WM3rs9ZR32KdSg4P411TsvFZcUFzSuw9j7DCATwAYQ3aVUlmEZa9jjLGxpaWlcr+95kwLPRwGOw4eHIDsHPGEL4SMimoAuf0hnOm1QX\/AaTU5nHf14PbSuqamSMYrmG8QuZw2Ws66T7JsgtsxnWREdjqp7HV6nPPPc87Pcc7PtbW1ST5GrfEEhJpKEkwrAdmkdGwrhZtL6thktJlIYzoQU12+QfTQqU4Y9UxTielxbwj2BiMOt1kq9hiuXjv8q5tYobahZSs1OIjvAMV+iuLZRSkFYf4jgJ8H8Mec80sljoEcgCcYRbetDrYGaZZwqm0z3JX5CNIZrqqVSjs5LCbcf6wNz03Oq+psrZgxb0iyYnuFuITNcJdm1V1JWA6lBocZ4bK\/yH2cOfct5lHh8q2MsZd2fgH4gHgf4boXShwjKeJ6MLavSqyFDLQ0oNliUk1wEJPRwyo9cwCA88M9CEa38JOZVbmHcmCr6wncXlrHqETF9go5LbYNpamlspVafc0tXJ5kjNUXWLF0b859S\/GGIrd1C18U8g8okcrg5uIa3ny8XbJjMsYw0ufAhGqCQxh9zQ1obSy9NarSvGWoHQ0mPZ6dnMfrD7XIPZwDmZCwuU8xFrMBR9uttGJpH0o6c+Cc+wFMADABeE\/u7Yyx+wH0Irt7+oclHO8BzjnL9wXgvwp3+6xwnb3E50IKuLW0hlSGS3rmAGSnlm4vr2N1PSHpcSvB7Qtv19tRqwaTAW890YGvXQmovlrrmDcEo55VpYxJNikd0dRKr2ooJyH9x8LlJxljR8QrGWPtAD4n\/PcTnPPMjts+xBjzMMaoJIaMPMJKpaEDFNzLR8w7KP3sIRDZRDC6pdpk9E4XhrsR3kji5VfVvUJvwhvCyW5bVXp4u5x2rK4nVFtJWC4lBwfO+VMA\/hLZXdCXGWPPM8YuAngVwAkAX8buHc6tAAYB9EkyWrIvnkAMJr0OA63Srgo502uDQccw7lN2cJj0hQGob\/NbPm882gZHgxHPqnhDXCKVwdRsuGKb33Jttw2lqaWylLWUlXP+QQDvR3aK6X4AbwdwE9nNbI\/vZ0kqqbzpYAxH2hth1Eu7crnOqMfJHpvik9Jufxgmgw4nJJ5Wk4NRr8M7T3fhm9cWVFsz6Mp8BPFURtLmPsUMdlphorahZSv73YJz\/gXO+X2c8ybOuYVzPso5\/+zO6aQd931SyBs8UMbxxe\/5ULljI\/l5AlEcl2BndD6jfQ5M+cNIKrjjltsXwqnuJkn7BcjpvKsbm8k0vnltQe6h7MtEBTq\/FWPU63Cqu4lWLJVJG38tpKDV9QQWY3EMSbT5LddovwPxVAbXFLpzN5nO4NJsBMMq3d+Qz70Dzeiy1am21tLYTAjO5nq0N9VV7TFdTjuuzEWpbWgZKDhonJiMrtSZw0i\/HYByN8N5AjHEUxlNJKNFOh3DeVc3vntjCSEVrBTb6W6xvcouYc017LRjM5nGq4vq2NGvBBQcNE7qshm5umz16LHXKzYpPekXK7Ha5R2IxM4PdyOV4fjqlYDcQymLf3UTS7F41aaURC6NVmj95Nc9+MKPfXvfcR8oOGicJxhFa6MJbdbKbf4a6VfuZji3L7xdnVNLTnQ14XCbRXVTS2Jzn2oHh\/6WBtjqjZrKO0Q2kvjr79\/BjYVSKhaVj4KDxnmCMQxKvL8h12ifHYHIFubDyltH7vaHcdZpr2j9HjkwxnBhuAc\/mVlV5OteyLg3BKvZgGMSVQcuVbZtqA2Tfu0UXPjK5exmyMdHeityfAoOGpbO8GxNpQpNKYlGhfljpeUdQusJ3FleV3U9pWLOu7rBOfDCJfWcPYx7Qzjb75ClbPqw044bCzFsJrSx4v7ixCyOtjfiVE9l\/r4pOGjYzMo64qkMjlf4zOF4lxX1Rj0mFJZ3EDc9qbUS614GWi1wOe2q2RAX2Uzi+kIMozJtRnT12pHOcFydV\/\/Zw8zyOsa8ITw20luxs2IKDhp2PZidixyq8OYvo14Hl9OmuLyD2x+GjqEq9Xvkct7VjavzUdxUwSqcSX8YnAPnKlyJtZAzTtv2ONTuonsOjAHvPttdsceg4KBhnkAUOoaqtMUc7Xfg6nxUUafsbl8Ig51NsJhLLT6sPo+cEfpLq6AJ0PjMKnTsbo+Famu31qHHXo8plfd2yGQ4Lk7M4r7DreiyVW6hBQUHDZsOxnCorbEqxc1G+x1IZTguKWQ1SCbDMekPa24Ja672pjr87OEWPDep\/P7S474Qhrqa0ChjsD7Ta1P9ctYxbwizoU08PtpT0ceh4KBhnmC04vkGkTivr5T9DreX1xDbSqm+THcpLrh6MLOyoehuZ6l0Bm5f9YrtFeJy2uFb3VBFmflCnh6fRYNJj7ef7Kzo41Bw0KjYVhL+1c2qBQeHxYTDbRbF5B0mhEqsIxo\/cwCAt5\/qhEmvU3Ri2hOMYSORxojcwUHcDKeQM9xybSXT+MrlAB461YUGU2XPwCg4aJS4MabSy1h3Gu13YNwbUsT0xqQ\/DGudAYdaK59vkZut3ogHBtvwwqV5pBXaX1pc5nxuoLplM3Kd7rWBMfXulP7GtQWsxVN4fKSyU0oABQfNmhbLZlSoplI+I30OhDaSuLO8XrXHLETs\/KaTYT29HC4M92AxFsePb6\/IPZS8xrwhdNnqZN+p3mg24Gh7o6Kn4Iq5ODGLbltdVdrEUnDQqOvBGKxmQ1X\/GMWSCHJvhluPp3A9GNVEc59SPTjUDovQX1qJxmdWZZ9SErl67ZjyhxVxhluOxdgWvndjCY+O9FTlQw8FB43yBLM9HKpZNuJwWyOa6gyyb4a7NBtBhgNnayAZLaoz6vH2U5346pUA4inlLCcGgPnwJuYjW7Ino0Uupx0rKmwb+qx7HhkOPHq2MuUyclFw0CDOOTyBypfNyKXTMYwIeQc5uYVKrLWwUmmn865uxLZS+O51ZfWXHq9yc5+9qDUp\/fTELFxOe1X2LQEUHDRpLryJWDxV1XyDaLTPgRsLa4hsJqv+2KJJXxj3tFrgsJhkG4Mc7jvSihaLCc8qbEPcuDeEeqO+4jv1S6XGtqHX5qPwBGNVSUSLKDho0N0eDjIEB+HToVumqSXO+XYl1lpj1OvwrjNd+JawokUpxr0hDDvtkvcw3y+TQYeT3U2YUlGF1osTszDqGR45U7lyGbmU8dMikhK7v1W7LDKQnc\/VMci232EunG0mo\/Wd0YVcGO5GPJXBN64G5R4KgOzigGuBqGKmlESuXjsuz0VU0TY0lc7gy5PzePPx9qqeDVNw0KDpYAzO5npY64xVf2yL2YChribZdkq7hc1vWuoZXY6RPgd67PWKqbU0NRtGOsMxKlOxvULEtqE3l5RfsPDlV5exvBbHYxXq21AIBQcNqkYPh2JG+x2Y9IVl+VTm9oVhNuhkybcoAWMM54e78fKry1hZi8s9HIzPZD8kjCgsWIvF\/9SQd3h6Yhb2BiPeNNhe1cel4KAxW8k0bi+tYUiGfINotN+B9UQa1yvUvrCYSX8IZ3ptipnflsOF4W6kMxxfvSx\/f+kxbwjHOhpha6j+WWwxAy0NaKozKL4zXGQziW9cW8B5VzdMhur+TtfuX5BG3VxcQ4YDx2VcGTIibD6rdt4hnkrjynxtbX7L53hnEwY7rLJviMtkOCZ8oe1OgUrCGIPLaVf8mcPXhFag1Z5SAig4aM50IJuMrnTf6GJ6HfVot5qrvt9hOhBDIpWpyZVKuc4PdwulnTdkG8Ori9nKuEpLRotcvXZcV3jb0IsTczjcZoFLhoZVFBw0xhOMwWzQYaDFItsYGGPZInxVTkqLy2e12jO6HOdd2SWPz0\/JN7U05l0FAMXsjM7lcmbbhl4LKHNqybeygZ\/MrFa0FWgxFBw0xhOMYrDTKksD951G+x3wr25iMbpVtcec9IfR2VRX0e5YauFsbsBInx3PTs7JNoZxbwitjSb0tzTINoZixE\/jSs07XHTPCq1Aq7fxbScKDhqTLZsh\/0odschaNessuX3a7\/xWjgvDPfAEY9vl26tt3BvCSJ9Dlk+9pWhvqkO3rU6ReQfOOS5OzOENh1pkq2RLwUFDlmJxrKwnZF3GKjrZ3QSTQVe1vMPyWhy+1Q0KDju883QXdAx4TobE9FIsDu\/KBs4pbH9DLpfTrsgaS+PeEHyrG7IkokUUHDRE3BmthDX+ZoMeZ3psVQsOk8Lmt1pfqbRTm9WM+4604tmp6veXVlqxvULO9NrhXdlASGFtQ5+emEO9UY+HTlW2FWgxFBw05G5NJfnPHIDsG8OVuWhVSki7\/SHodQynuqu\/qkPJLgz3wL+6CXeVp07GvaswGXQ41aPsn4fLmR2fks4etpJpvHBpHg+d6oTFXNlWoMVQcNCQ6WAU7VYzmhVSjXSk34FEOoMrc9GKP9akP4yhLivqTfqKP5aavP1kB0wGXdWnlsa9IZzpscFsUPbP43SP2DZUOUnpb00vILaVknVKCaDgoCmeQEzWzW+5qrUZLp3hmPJHcFZhJRqUwFpnxIPH2\/HCpUDVyplsJdO4Mqe8Ynv5WOuMONLWiEsKOnO4ODGHzqY6vOFw5VuBFkPBQSOS6QxuLspbNiNXm9WM\/paGiucdbi6uYS2eomR0AReGu7G8FscPq9Rf+vJcBIl0RhXBAbiblFZC29ClWBzfvbGEd5\/tkX05OgUHjbizvI5EOqOIZPROo33ZzXCV\/MMTN79RMjq\/BwbbYTUbqlZOQy3JaJHLacfyWgJzYfnbhj43NY90hle1qU8hFBw0whNUVjJaNNLvwFIsXtF+vW5fGPYGIwYUutlKbnVGPd5xqhMvXgliK1n5xQFjMyHc02pBS6O54o8lBXEznBLyDk+Pz+JMrw1HZejFkouCg0Z4AlEYdAyH26rTX7ZUYt6hklNLk\/4whp12xW62UoILwz2IxVN46fpiRR+Hc7HYnjrOGoDsByqTXif7iqXpQBTXAlE8JtOO6FwUHDTCE4zhSHtj1cv67mWw0wqLSV+x4BDbSuLGYoyS0Xt4w+EWtDaaKz61dGd5HavrCVUFB5NBhxPdTZiUeaf0M+45GHQMj7iq1wq0GGW9k5B98wSislZiLUSvYzjb56hYcLg0GwHnoGT0HvQ6hofPdOGfPYuIbiUr9jhjws9ZqcX2Chl22nFlLoJ0Rp6kdCqdwTPuObzpeLtipuMoOGhAZCOJ+ciW4vINopF+BzzBaEWa3ovJaBeV6d7TheFuJFIZvHilcv2lJ7wh2OqNipve3IvLacNGIo2bi\/K0DX3l1gqWYnFFJKJFFBw0QEllM\/IZ7XcgwyvTktHtC+NwmwW2emV1GlOiYacdfc0NFe0vPeYNYaTPDp3MyzDL5eq1A5CvbejT47Ow1RvxpuPVbQVaDAUHDRBXKg0p9MwhmyyWPinNOcekP0xLWEvEGMN5VzdeubmMpZj0\/aXDGwncXFzDuQHldX7by0CLJds2VIakdGwriRevBvGIq0tRO8opOGiAJxiDvcGIjiZlzFXmstUbcazdKnlw8K9uYmU9QfmGMlwY7kaGA1+5JP3Zg1ieXU3JaJFOx3CmV562oV+7HERcplagxVBw0ABPMIrjnVZFL+Uc6XdgwhdCRsKEn9svbH6jlUolO9phxVBXE56twNTS2EwIBh3bnqJRG5fTBk8wVpW9IDs9PTGLQ60WxbW3peCgcpkMx\/VgTLHJaNFovwOxrRRuLkmX8HP7wmgw6XGsQ13JT7ldGO6G2xeGb0Xa\/tLj3hBOdjeptvihqzfbNvTqfPU2w\/lXN\/DjO6t4bKRHcR\/uKDionD+0gY1EWhHd34oRpxqknFpy+0I43WODQU+\/xuUQ19E\/L+HUUjKdwdRseLsDoBoNC5\/cq7lT+hl3to2rXK1Ai6G\/KpWbFns4KKgaaz4DLQ1otpgkCw5byTSuBaKUjN6HHns97h1w4Mtu6ZoAXZ2PYiuZwbl+9SWjRe1Ndeiy1VVtp3S2FegsXn+oGb0O5ZV+oeCgcp5gFIxB8VMrjDGM9DkkK999dT6KZJpTMnqfzg\/34NXFte2VbgclBn2ltwXdi6uKSekJXxgzK\/K2Ai2GgoPKeQIxDLRY0GCSr2NUqUb7HbgtlFc4qO1KrApL4qnFu053waBjku15GPeuosdej46mOkmOJ5czThtmVjYQ3qh829CLE7OoM+rwztNdFX+s\/aDgoHLXF2KKzzeIxLyDFGcPbn8YPfZ6tKv8zUguzRYTfu5oK56bnD\/wCjLOOcZmQqo\/awCAYXEz3Gxl8w7xVBrPT83jHSc70ShjK9BiKDio2EYihZmVdcWvVBKd6bXBoGMY9x08OEz6whimKaUDuTDcjbnw5vb+hP2aDW1iMRZXXT2lfE71im1DwxV9nH+eXkRUAa1Ai6HgoGI3FtbAuXLLZuSqM+pxssd24KT0YnQLc+FNmlI6oLee6ESdUXfgSq3iz1PNK5VETXXZulCVbht6cWIW7VYz7jvSWtHHOQgKDirmCQg1lVQyrQRkO8NN+cNIHqCfsVv4VEcrlQ6m0WzAW4Y68NXLgQP9PMa9IVhMetWcwe7F1WvHpD9Sse6Fy2txvHR9CY8qoBVoMRQcVMwTjKHBpIdTgcvgChntdyCeyuDafHTfx3D7wjDqGU52a+PNSE7nXd1YWU\/glZvL+z7GmDeEs30ORb\/RlWPYacPyWhzzka2KHP\/5qXmkMlzRU0oABQdVmxZ6OKipAuZIvx0ADjTP7faFcKLbhjqjOnfiKsn9g21oqjPguX1OLcW2krgejKqynlIhru3NcOGKHP\/ixBxO9TQpsv\/KThQcVIpzDo8Kymbk6rLVo8dev++8QyqdwaXZCOUbJGI26PHO01148WoQm4nyawpN+sPIcPXvb9hpu21oBYLDjYUYLs9F8NhZZZ81ABQcVGshGkdkM4khlSSjdxrp3\/9muBsLa9hMpmnzm4TOD3djPZHGtz3l95cemwlBx+6WntACk0GHoQq1DX16YhZ6HcP5YWW0Ai2GgoNKTYsNflR25gAAo312zEe2MB\/eLPt7qRKr9H7mnhZ0NJnx7ORc2d877g1hsLMJ1jptNVsa7rVJ3jY0neH4snsODxxrQ6tCWoEWQ8FBpTxCTSWlz1vmMyrU39lP3sHtC6PFYoKzuV7qYdWsbH\/pbrx0fQmRjdL7S6czHG5fSBP7G3K5nHasJ9K4JWEV4R\/cWsZCNI7HR5U\/pQRQcFAtTzCKbludKttjHu+yos6o21fewe0L4WyfXXHljdXuwnA3EukMvn41UPL3eIJRrCfSmkpGi8SktJRTSxcn5tBUZ8CbFdQKtBgKDirlCcQUX4m1EKNeB1evvey8Q2QjiVtL65qa31aK0z023NNqKWtDnPjz02JwuKfFAmudQbKk9Fo8ha9fCeJhV7dqVtlRcFChRCqDW0trqtr8lmu034Gr89GyVsiIpZRp85v0xP7SP7y9gsVoaev7x7whtFvN6HVob4ov2zbUJln57q9dDmAzmcbjI8rr21AIBQcVurW0hlSGq\/bMAcgGh1SGl1WmwO0Lg7FsjSYivfPD3eAceP5SaVNLYrE9rU7xuXrt8ASkaRt6cWIOAy0NGFHRBxsKDirkEVYqDan4zEH89F9OET63P4Rj7VbNrYxRisNtjTjV04TnSli1FIxk61uNqri5z15cTjtSGY6rB9jNDwCzoQ388PYKHhvpVVUgpeCgQp5ADCa9Dve0WuQeyr41W0w41GYpOe\/AOcekP0z7GyrsgqsHU7MR3FleL3q\/cQ3nG0RibuugRfjEPM6jCmwFWgwFBxWaDsZwtKNR9b2TR\/scGPeGSipwlm3AkqRkdIU97OoCY9n6P8WMeVdRZ9Rpur5VR1MdOpvqDpSU5pzj6fFZvO6eZjib1VMDDaDgoEoeoaaS2o32OxDaSO75KRXY0flNRXO2atRlq8frBprx5cni\/aUnvCG4eu0wqvwDyl5cTtuBGv9M+sO4vbyuqkS0SNs\/WQ1aWYtjMRbHkAp3RucSpyRK2e\/g9oXRaDbgSLuye2VrwYXhHtxeWi84176ZSOPqvLaK7RXictpxZ3l9321DL07MwWzQ4SGFtgIthoKDylwXGsKrpcFPMYfbGtFUZyhpp7TbH4LLadNMWWgle+hUJ4z6wv2lp2bDSGW4portFeIS2oZe2sfZQzyVxvOX5vH2k51oUuEiCgoOKuMRg4MGzhx0OoaRfseeZw6biTSmAzGqp1QlDosJ9x9rw\/NT+ftLb3d+q4EpvtPCsun95B2+41lCeCOJx1Q4pQRQcFAdTzCK1kYT2qzKL9xVitE+B24srCGyWbimz5X5bAE0SkZXzyOubgQiW\/jpzOqu28ZmVnGkvRH2BpMMI6uubNtQy77yDk9PzKLNasbPKbgVaDEUHFRGjT0cihHnrd1FppbE24ZpGWvVvPVEB+qNejybM7WUyXBM+MKaLLZXiMtpx6Q\/XFbb0NX1BL7jWcS7h7tVu6pQnaOuUekMx\/VgTNVlM3K5nHboGIrud3D7wuhrblBFmWOtaDAZ8LaT2f7SidTd\/tK3lrJneSM1FByGnXYsr8URKKNtqNgKVC0VWPOh4KAiMyvriKcymljGKrKYDRjqaiq6U9rto81vcrgw3I3wRhLfv7m0fd2YEMRr6sxBSEqXk3e4ODGLE11Nqj7Lp+CgImIPhyEV11TKZ7TfgUlfGKl0ZtdtgcgmgtEtagsqg5870gZ7g\/E1lVrHvSE0W0yq3p1fruNdVhj1DJMl7pS+uRjD1GxEtYloEQUHFfEEo9AxaG6t\/2i\/A+uJNK4vxHbdNukLAwCGa2BljNKYDDq883QXvnF1ARuJFIBscBjp026xvXzMBj1OdDWVfObw9MScalqBFkPBQUU8wRgOtTWqph58qcQlkfnyDm5\/GCaDDic0drakFhdc3dhMpvHNawtYWYvjzvJ6TexvyOVy2nF5du+2oWIr0J8\/2op2a12VRlcZFBxUxBOMaioZLep11KPdas6738HtC+FUdxNMBvpVlcO9A83ostXh+an5mii2V4irN9s29PYebUN\/dHsFgciWqhPRIvqLU4nYVhL+1U3N5RuAbKOZ0X7HrqR0Mp3BpdkI1VOSkU7H8Igr21\/6n6cXYdLrcLqn9vpplNo29OmJWVjrDHjLUEflB1VhFBxU4saCuDNae2cOQPbTqH91E4uxu8sFPYEY4qkMrVSS2XlXN1IZji+N+3Gqp0lz05qlONRqgdVsKNoZbl1sBXqmSxOvEQUHlZgWVippaRnrTuK6+QlvePu6Sb+w+Y1WKsnqZHcTDrdZkOG1OaUECG1DnTZM+QvvlP76lSA2Emk8NqL+KSWAgoNqeIJRWM0G9Ni1168XyL4BmQy61xThc\/vCaLOaNfuc1YIxhgvD2WWZWu78tpczvXZMB6IF24ZedM+ir7lBM3tADHIPgJTGE4jheJdVs0sIzQY9TvfYXpOUdvvDOOu0a\/Y5q8n7f6YP4Y0k7j\/WJvdQZOPqzbYNvRaI7io6OB\/exA9ureDXHjyqmd\/Xss8cGGPvY4y9zBiLMMbWGGNjjLEnGGMlH4sxpmOM\/Sxj7I8YYz9gjIUYY0nG2AJj7KuMsXeXOy4t41wsm6G9ZPROo\/0OXJ6NIJ5KI7SewJ3ldUpGK0RLoxm\/98gJ1JvUP5e+X9ttQ\/MkpbPNkYDHzmpjSgkoMzgwxj4L4B8AnAPwMoBvAjgG4DMAniojQBwC8AqA3wYwCOAnAJ4G4AXwEIBnGGN\/y7QSgg9oLryJWDyliR4OxYz0OZBIZ3BlLrq9KoSS0UQpOm116Ggy76rQKrYCvXfAgb4WdbUCLabkaSXG2OMAPgggCODnOeevCtd3APgOgEcBfBjA\/yjhcBzAtwF8CsA3Oefbk3iMsfsBfAXABwB8D8DfljpGrRLLZmj9zGGk3w4guxkuFk9Bx1CTyyaJcrl67bt2Sl+ajeDW0jr+3RsPyTOoCinnzOE3hcuPioEBADjnCwB+Vfjvx0o5e+Cc3+KcP8g5\/\/rOwCDc9l0AnxD++0tljE+zPMFsu0atrlQStVvr0NfcgHFvCG5fCIOdTbCYKS1GlMPltOP28joiG3f7j1ycmN0uNaIlJQUHxlgvgFEACQBfyr1deEOfA9AJ4PUSjMstXGpnAu8ApoMxOJvr0VgDb5Sj\/Q6MeUOY9FMlVqI8221D58IAgEQqg+em5vG2Ex2w1auvFWgxpZ45nBUur3LONwvc56c59z2Io8JlQIJjqZ4nENX8lJJopN+B5bU4YlspqsRKFCe3behL1xcR2kjicY3sbdip1OBwj3DpLXIfX85994Ux1gDgPwr\/ffogx9KCrWQad5bXMaTxKSXR6I7VSbRSiSiNrd6IQ20WTAqb4Z6emEVrowlvPKrOVqDFlBocxBrR60XuI1akOui72OeQDTDXAHy+0J0YY78sLKMdW1paKnQ31bu5uIYMB45rsKZSPoOdVlhMeljrDDhUQz0DiHoM99oxNRtGaD2Bb3sWcWG4R7WtQItR1DNijP0ugH8FIALgvZzzeKH7cs4\/zzk\/xzk\/19am3Y0504FsMlqrNZVy6XUMDw514MHj7dDpaCUzUR6X046lWBz\/78u3kUxz1Tf1KaTUDKd4VlDso5x4drG7Y0sJGGMfAfAHwmM9xDm\/up\/jaI0nGEOdUYf+ltr5FP0XvyhF2oqQyhArtP5\/L9\/B8U4rTnZrc7l1qWcOM8Jlf5H7OHPuWzLG2IcB\/BmATQAPc85\/WO4xtMoTjOJYhxV6+hRNiCIMCW1DE+mMJhPRolKDg7i09CRjrFAVtHtz7lsSxtgTAP4CwBaA88KyWILszsvpQKxmppQIUQOzQY+hriboGHBB5a1AiylpWolz7meMTQAYAfAeAH+383ZhV3MvsrunS\/7Uzxj7FWRLb8QBvJtz\/q1Sv7cWLK3FsbqeqJllrISoxb++bwDelQ20N6m7FWgx5SSk\/1i4\/CRj7Ih4JWOsHdkVRgDwCc55ZsdtH2KMeRhjrwkmwm3\/Xvi+OIBHOecvlj16jdsum6HxmkqEqM2jZ3vx\/7zlmNzDqKiSt9xyzp9ijP0lsqUyLjPGvgUgCeBBAE0AvozsWcBOrcgW1gvuvJIxNgzgrwAwAHcA\/AvG2L\/I87DLnPP\/XOoYteZ6sDZqKhFClKesegyc8w8yxr4P4AkA9wPQA\/AA+BsAf7nzrGEPdmQDAwAcF77y8QKo2eAwHYyio8mMZotJ7qEQQmpM2cV6OOdfAPCFEu\/7JIAn81z\/Eu4GB1KAJ6D9Hg6EEGVS1CY4clcyncHNxTVaqUQIkQUFB4W6s7yORDpDyWhCiCwoOCjU3bIZNK1ECKk+Cg4K5QnGYNAxHG5r3PvOhBAiMQoOCnU9GMOR9kaYDPQjIoRUH73zKFS2wQ\/lGwgh8qDgoECRjSTmI1s108OBEKI8FBwUyBPMJqMH6cyBECITCg4K5BHKZgzRSiVCiEwoOCiQJxiFvcGIjiaz3EMhhNQoCg4KJPZwYIwqjBBC5EHBQWEyGY4bC1RTiRAiLwoOCuMPbWAjkcYQlc0ghMiIgoPCTAeohwMhRH4UHBTGE4yCMeBYB505EELkQ8FBYTyBGAZaLKg36eUeCiGkhlFwUBhPkMpmEELkR8FBQTYSKXhXNyjfQAiRHQUHBbmxsAbOQQ1+CCGyo+CgIB6hwQ+VzSCEyI2Cg4J4gjFYTHr0OurlHgohpMZRcFCQ6UAUxzqt0OmobAYhRF4UHBSCcw5PkMpmEEKUgYKDQgSjW4hsJqlsBiFEESg4KISHymYQQhSEgoNCiA1+qPsbIUQJKDgohCcYRY+9HrZ6o9xDIYQQCg5K4REa\/BBCiBJQcFCAeCqNW0trNKVECFEMCg4KcGtxHakMx\/EuSkYTQpTBIPcAlCiVzmArlcFWMi18Zf8dT9399\/bljuviyXTe7xOvi4vXpXKPmwEADNGZAyFEIWo6OFybj+LD\/ziBrWTmNW\/8qQzf9zHrjDrUGfWoM+i3\/2026lFn0MHeYCp4e4+9DkfaGyV8doQQsn81HRwsZj0GO62oMwhv4HneuLffwF9znR71Ofc3G3UwG3RgjEpfEELUr6aDQ3+LBZ97\/6jcwyCEEMWhhDQhhJBdKDgQQgjZhYIDIYSQXSg4EEII2YWCAyGEkF0oOBBCCNmFggMhhJBdKDgQQgjZhXG+\/1IRSsEYWwLgPcAhWgEsSzQcQq9nJdBrKi16PbP6Oedt+W7QRHA4KMbYGOf8nNzj0Ap6PaVHr6m06PXcG00rEUII2YWCAyGEkF0oOGR9Xu4BaAy9ntKj11Ra9HrugXIOhBBCdqEzB0IIIbtQcCCEELJLTQQHxpiFMfZ+xtifM8ZeYYytM8Y4Y+wFCY49yBj734yxecZYnDHmZYz9JWOsS4qxK52Uz58xNiD8XIp9\/V+VeB7VxBh7H2PsZcZYhDG2xhgbY4w9wRjb198jY+wdjLFvMMZWGWMbjLErjLHfZoyZpR67Ekn1ejLGntzjd2+rUs9BiWqlE9xRAP9b6oMyxu4H8DUA9QAmAHwPgAvArwB4nDH2c5zzG1I\/rlJU8PmvA3iqwG139jNWpWCMfRbABwFsAfhnAEkADwL4DIAHGWO\/wDnPlHG83wDwSQBpAC8BCAG4H8AfAXiYMfYg53xD0iehIFK\/noIpAJN5rk8eYKjqwznX\/BeAwwD+GsCvAngdgP8AgAN44QDHtAAICMf5UM5tfypcPw4h6a+1r0o8fwADwvfNyP38KvSaPS48vwCAozuu7wBwTbjt18o43jkAGWSD6c\/suL4RwHeF4\/13uZ+3il7PJ4XveVLu56aEL9kHIMuTBj4gQXD4kHCMb+e5TQ\/gpnD7O+V+vhV6DSV\/\/jUQHMaE5\/cv89x2\/443Ol2Jx3tK+J7fy3PbIWTPJuIA7HI\/d5W8nhQcdnzVRM6hQt4tXP5D7g2c8zSAf8q5n9a8W7is1edfFsZYL4BRAAkAX8q9nXP+XQBzADoBvL6E45kAPCT8N9\/P4DaAHwIwAXjnvgeuUFK\/nmQ3Cg77d1a4\/GmB23+acz+tqeTztzDGfpMx9leMsb9gjH1QeDNQM\/F1uMo53yxwn3Jes0EADQBWOee3JDie2kj9eu40whj7JGPs84yxTzDGHhWCcU2plYS0pBhjTQCahf8WqgbrEy7vqfyIqqsKz78VwMdzrvtzxtinAPwOF+YAVEZ8HYpVDy7nNRPv4ytyH83+DkL613OnR4SvnWYZY78knJHUBDpz2J\/GHf9eL3CfNeHSWuGxyKFSzz+ObFmDtwLoQfaT8WlkV+NwAL8F4A\/LGqlyiK9ZodcLKO81k\/p4alOJ538LwG8CGAZgA9AG4M3IJvd7AXyVMXam7JGqlOLPHBhjfwLg\/D6+9UHO+ZzU49ECpb6mnPMAsivJdroC4GOMsVcAPAfgNxhjn+Ocz1dqHKQ2cc7\/Ps\/V3wHwHcbYU8iujvo4gIerOjCZKD44AOhGdn61XEapB7LD2o5\/WwBE8txH\/GQTq+A49uugr2nVnz\/n\/HnGmBvZ+eO3APg7KY5bReJrZilyn3JeM6mPpzbVfv5\/gGxweCtjzMg51\/yeB8VPK3HOf4lzzvbxNVPBMUWR3WwEAP0F7uYULis2jv066Gsq4\/P3CJc9Eh6zWmaEy0KvF1Deaybep0+i46nNjHAp1eu5F\/F3z4RsTkzzFB8cFGxCuLy3wO2vEy7dVRiLHOR4\/i3C5VrReymT+DqcZIzVF7jPvTn3LcYDYBNAM2PscIH7aPl3UOrXcy8tO\/6txt+\/slFw2L9nhcv3597AGNMDEGsAPVO1EVVXVZ8\/Y6wTwBuF\/xZaPqtYnHM\/sgHVBOA9ubcLpUh6AQSR3Z+w1\/ESyJYuAfL\/DA4BeAOy+wC+su+BK5TUr2cJ3itcXueca3Gabje5d+HJ8YUSd0gj+8nLA8CT57ZG3C0f8UTObZ8Srp+Adstn7Ov5Izsl5BG+enJu+\/e51wnXnwDwE+GYP5D7uR\/gNfsF3N21e2TH9e0AriJPuQdkd6J7APxdnuPdi7vlM16X87N5CdovnyHZ64ns9Nz7AJhzrmcA\/m8AG8Lx\/oPcz7tqr6\/cA6jiL9IzAH4kfN0SftChHdf9CMC7cr7nAeF+vMAx79\/xSzMG4B9xt6bLEoBBuZ93hV\/Tsp8\/7pbI4AAGcm6bFN7sppAtDfFPyJ4lJIX7TwPolft5H\/A1+5zwXDYBPA\/gIrIJfS78jupz7v+kcNtLBY73G8LtKQDfAPBFAAvCdT8C0CD3c1bD64ns8lUOICoE1i8Ix7u94\/f1f8r9fKv62so9gCr+Es3s+CEX+vpAzvcUDQ7CfQaRLV8QRHadvg\/A\/wLQJfdzrtLrWtbz3yM4\/FshKFxHNnAnAawgu8781wDUy\/18JXrN3gfgFeGNaB3ZAoVPIE8NoL2Cg3CfdwD4pvCabSL7qfm3kfMpWKtfUryeyOYU\/gTZpat+ZD\/0bAnvG\/8E4M1yP89qf1GbUEIIIbtQQpoQQsguFBwIIYTsQsGBEELILhQcCCGE7ELBgRBCyC4UHAghhOxCwYEQQsguFBwIIYTsQsGBEELILv8\/l0kCSYWXM9wAAAAASUVORK5CYII=\n",
                    "mimeType":"image\/png",
                    "width":0,
                    "height":0,
                    "type":"plot"
                  },
                  {
                    "image":"iVBORw0KGgoAAAANSUhEUgAAAYcAAAECCAYAAAAVYxsVAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAw+ElEQVR4nO3deXxU9b3\/8dcn+zIDISSZsK+ZIAhWCVsRoVV\/V6tW0da22LqDC9be2nu1am\/r9VqX9tbbW6u2ivuCWhRbl3q1LhBEdpRFIMO+yJKBEMi+zPf3x5yBNOtMMjNnkvk8H495HDLnzHe+5yTMe875fs\/3K8YYlFJKqaYS7K6AUkqp2KPhoJRSqgUNB6WUUi1oOCillGpBw0EppVQLSXZXIBxycnLM0KFD7a6GUkp1K6tXr\/YaY3JbW9cjwmHo0KGsWrXK7moopVS3IiK72lqnl5WUUkq1oOGglFKqBQ0HpZRSLWg4KKWUakHDQSmlVAsaDkoppVrQcFBKKdWChkMMqGvwMX\/FbhoafXZXRSmlAA2HmPD2uq+48431FHu8dldFKaUADYeYsLikFIAtB4\/bXBOllPLTcLCZz2dYstV\/xlByQMNBKRUbNBxstunAMbwVdSQliJ45KKVihoaDzQLtDBeM68fWQxU0+nROb6WU\/TQcbLa4pJRR+U6mjsyhtsHH7iNVdldJKaU0HOxUVdfAqp1lTCvIodDlBGCLtjsopWKAhoONlu84Ql2jj7PcuRS4HACUaLuDUioG9IjJfrqrxSWlpCYlMGFoNmnJiQzOztBGaaVUTNAzBxsVe7xMHOYPBgC3y6ndWZVSMUHDwSZfHa1m66EKzio4OX2r2+Vgh7eSugYdRkMpZS8NB5sssbqwnuU+GQ6F+U4afIYd3kq7qqWUUoCGg20WeUrJc6bithqiwX9ZCXQYDaWU\/TQcbNDoM3y61cu0glxE5MTzw3MzSUwQbXdQStlOw8EGG\/aVc7SqnrPcOf\/0fGpSIsNyMvXMQSllOw0HGxR7\/KOwnjkyp8U6t8uBR8NBKWUzDQcbLC7xcuqAXvR1pLZY53Y52XWkiuq6RhtqppRSfhoOUXa8pp41u8uY1qQLa1OFLifGwNZDFVGumVJKnaThEGXLth+hwWf+6f6Gptz52mNJKWU\/DYcoK\/aUkpGSyBlDslpdPyQ7g5SkBB1jSSllKw2HKFtcUsrk4X1JTUpsdX1SYgIjch0aDkopW2k4RNHuw1XsPFzFtIKWvZSaKnQ59F4HpZStNByiqHirvwtr0yEzWuPOd\/JVeQ3HauqjUS2llGpBwyGKiku8DMhKZ3hOZrvbBSb+0fsdlFJ20XCIkoZGH59u8zKtIOefhsxozYkxlg5od1allD00HKLki71HOV7T0Ob9DU0NyEonIyVRG6WVUrbRcIiSxSVeEgSmjuzb4bYJCUKBy6nhoJSyjYZDlBR7Shk3MIusjJSgti90aXdWpZR9NByioLyqns\/3HOWsDrqwNuV2OfFW1HG4ojaCNVNKqdZpOETB0m1efAamddCFtalCaxiNkoPaKK2Uij4NhyhY7PHiTE3ia4Oygn5NoMeSXlpSStlBwyHCjDEsLillyoi+JCcGf7jznKn0Tk\/WAfiUUrbQcIiwHd5K9h2tDumSEoCIUOhy6jAaSilbaDhEWLHHC8D0IO5vaM6d72DLweMYY8JdLaWUalfI4SAis0SkWETKRaRCRFaJyFwR6XLQiMgcETHW449dLS8WFHtKGdI3g8F9M0J+baHLyfGaBg4e0x5LSqnoCukDXUQeBV4CioBi4APADfwRWNCVgBCRIcB\/Az3ma3Jdg4\/Pth3ucBTWthS4dOIfpZQ9gv4wF5HLgJuBA8A4Y8yFxpiZQAGwCZgJ\/LgzlRD\/YENPWfV5vjNlxKI1u8uorGsMasiM1pzosaTtDkqpKAvlm\/6d1vIOY4wn8KQx5iBwk\/Xjzzt59nAjcLb1Hjs78fqYVOwpJTFB+PqIjofMaE12Zgq5zlQ9c1BKRV1QH+QiMhAYD9QBf2m+3hizCNgH5AOTQ6mAiAwDfgMswX95qsco9ng5Y3AWzrTkTpdRqGMsKaVsEOy3\/NOt5UZjTHUb26xstm2HrMtJTwNJwHWmB3XLOVJZx\/p95Z2+pBTgdjnxHKzA5+sxh0Yp1Q0EGw7DrOWudrbZ3WzbYNwCzADuMcaUhPC6mLdkqxdj6HRjdIDb5aC6vpG9ZW1lslJKhV+w4eCwlpXtbBMYBMgZTIEiMgJ4EFiFv5dSSKxur6tEZFVpaWmoL4+44pJSeqcnM25gVpfKcedrjyWlVPTZchNck8tJyfgvJzWGWoYx5gljTJExpig3t2uXbsLNGEOxx8uZI3NITGh\/1reOFOT5c1nbHZRS0RRsOATOCtqb\/DhwdhHMp9itwFnAA8aYdUHWodvwHKrgwLGaLl9SAnCmJTMgK50t2p1VKRVFSUFut9NaDmlnm0HNtm3PTGt5rohMb7ZuaGAbETkVqDDGXBhEmTFjcYn\/Mleo4ym1pTBfeywppaIr2HBYay3HiEh6Gz2WJjTbNhhT2lnX33qUh1BeTCj2eBmRm8mArPSwlFfgcrDE46W+0RfSyK5KKdVZQX3SGGP2AGuAFOC7zddb3\/4H4r97+rMgypthjJHWHsB\/Wps9aj2XFeS+xISa+kaW7zjc5S6sTRW6nNQ1+th1uL3+AEopFT6hfA19wFo+JCIjA0+KSB7wmPXjg8YYX5N1t4jIZhHpMUNidGTVzjJq6n2c5e56e0NAYBiNLQd0VjilVHQEHQ7GmAXA4\/jvgl4vIm+JyBuABxgNvEnLO5xzgEJgcFhq2w0Ue0pJThQmDevckBmtGZnnIEG0O6tSKnqCbXMAwBhzs4gsAeYC04FEYDP+bqmPNz1riFeLPV6KhmSTmRrSoW1XWnIiQ\/tm4tFwUEpFScitm8aYl40xU40xvYwxmcaY8caYR1sLBmPMPVa7wYwQyg+85pZQ62a3Q8dr2LT\/GNPCeEkpoMDl0DMHpVTUaNeXMFpizfp2VhgbowMKXU52eiupqQ\/5fkGllAqZhkMYFXu89M1MYXS\/XmEv253vxGdgW6k2SiulIk\/DIUx8PmvIjIIcEro4ZEZrCgMT\/+ilJaVUFGg4hMnmA8fxVtSG9f6GpobmZJKcKJQc1DMHpVTkaTiEyWKPNWRGGMZTak1yYgLDcxw6ZahSKio0HMKk2FPKqHwnrl5pEXsPd75TeywppaJCwyEMqusaWbmjLGJnDQGFLgd7y6qpqG2I6PsopZSGQxgs33GYukZfxNobAgLDaOjNcEqpSNNwCIPFJV5SkxKYOCw7ou9TmB8IB22UVkpFloZDGBR7Spk4LJu05MSIvs+gPhmkJSdou4NSKuI0HLpof3k1nkMVEbkrurmEBKEgTyf+UUpFnoZDFxVbQ2ZEYjyl1rhdTp0yVCkVcRoOXbS4pJQ8Z+qJO5gjrTDfwaHjtRytqovK+yml4pOGQxc0+gxLtnqZVpCLSPiHzGiN+8QwGtoorZSKHA2HLtj4VTlHq+rDOutbR07MCqftDkqpCNJw6IJAe8PUkdELh36903CmJukwGkqpiNJw6IJFJaWM6d+LHEdq1N5TRHQYDaVUxGk4dFJFbQNrdpVxljvyXVibc7v83VmNMVF\/b6VUfNBw6KRl2w7T4DMRH0+pNW6Xg6NV9ZRW1Eb9vZVS8UHDoZOKPaWkJycyfkifqL\/3iYl\/DmiPJaVUZGg4dNJij5fJw7NJTYrskBmtcedrjyWlVGRpOHTCniNV7PBW2tLeAJDjSKVvZor2WFJKRYyGQyecGDIjCuMptcXt0h5LSqnI0XDohGJPKf17pzEiN9O2OrhdDjzaY0kpFSEaDiFqaPRFfciM1rjznVTWNbLvaLVtdVBK9VwaDiH6Ym85x2sabGtvCDjRY0kvLSmlIkDDIUTFnlJEYOrIvrbWoyAwxpJ2Z1VKRYCGQ4iKPV7GDcwiKyPF1nr0Tk+mX+80PXNQSkWEhkMIyqvr+XzPUabbcFd0awpcOiucUioyNBxC8Nk2L40+wzSb2xsCCl0OPIcqaPRpjyWlVHhpOIRgsceLIzWJrw3KsrsqgP9eh7oGH7sOV9pdFaVUD6PhECRjDItLSpkyoi\/JibFx2ArztceSUioyYuNTrhvYebiKvWXVtndhbWpkngMR7bGklAo\/DYcgFXtKATgrRhqjATJSkhjUJ4OSQ3rmoJQKLw2HIC0u8TI4O4Mhfe0bMqM1bpdTB+BTSoWdhkMQ6hp8fLbNa8vEPh0pzHeww1tJbUOj3VVRSvUgGg5BWLu7jMq6xphqbwhwu5w0+Aw7vNpjSSkVPhoOQSj2eElMEKaMsHfIjNYEeixt0UtLSqkw0nAIQrGnlNMHZdErLdnuqrQwLCeTxATBc1B7LCmlwkfDoQNHKutYt6\/c1ol92pOalMiwnEyd+EcpFVYaDh34dKsXY+Asd+w1RgcU6hhLSqkw03DoQLGnlF5pSYwbmGV3VdrkdjnZfaSKqroGu6uilOohNBzaYYyh2OPlzIIcEhPsm\/WtI4X5DoyBrYe03UEpFR4aDu3YeqiC\/eU1MdveEFBwYlY4DQelVHhoOLRjsccLEJM3vzU1JDuDlKQEbXdQSoWNhkM7ij2lDM\/NZGCfDLur0q6kxARG5jr0XgelVNhoOLShtqGRZdsPc1aMX1IKKMzXHktKqfDRcGjDqp1l1NT7YroLa1Nul5P95TWUV9fbXRWlVA+g4dCGxZ5SkhOFScNib8iM1rhdDgC26vDdSqkw0HBoQ3GJl\/FD+pCZmmR3VYLidgXGWNIeS0qprtNwaEXp8Vq+3H8s5ruwNjUgK53MlERtd1BKhYWGQyuWbPXP+jY9BofobktCglDgcmqPJaVUWGg4tKK4xEt2Zgqj+\/Wyuyoh0TGWlFLhouHQjDGGxR4vZ47MISGGh8xoTYHLweHKOrwVtXZXRSnVzWk4NLP5wHG8FbUxf1d0awIT\/+jZg1KqqzQcmllc4m9viMUpQTtSGBhjSdsdlFJdpOHQTLHHS6HLiatXmt1VCVmuM5WsjGS26AB8Sqku0nBoorqukRU7j3TLS0oAIoLb5cSjl5WUUl2k4dDEip1HqGvwMa0bXlIKcLscbDl4HGOM3VVRSnVjGg5NLC4pJSUpgUnDsu2uSqcVupwcr2ngwLEau6uilOrGNByaKPaUMmlYNmnJiXZXpdNODqOhl5aUUp2n4WA5UF5DycGKbtveEOB2aXdWpVTXhRwOIjJLRIpFpFxEKkRklYjMFZGgyxKRBBH5uojcJyJLRaRMROpF5KCIvCsil4Rar64q9vi7sHan8ZRa0yczhTxnqk4ZqpTqkpCGHBWRR4GbgRrgQ6AeOBv4I3C2iHzHGOMLoqjhwKfWv48AK4Ay6\/nzgfNF5FngWhOlltXFHi+5zlRGWTeSdWduHUZDKdVFoXzbvwx\/MBwAxhljLjTGzAQKgE3ATODHQRZngI\/wB0GeMeZfjDHfN8ZMBGYAlcDV1iPifD7DEk8p0wpyEOleQ2a0JhAOPp\/2WFJKdU4ol5XutJZ3GGM8gSeNMQeBm6wffx7M5SVjzDZjzNnGmPeMMY3N1i0CHrR+\/GEI9eu0jV8do6yqvttMCdqRwnwHNfU+9pRV2V0VpVQ3FVQ4iMhAYDxQB\/yl+XrrA30fkA9MDkO91lrLgWEoq0OLrfaGM7t5Y3SA9lhSSnVVsGcOp1vLjcaY6ja2Wdls264osJb7w1BWhxaXlDKmfy9yHKnReLuIK7DCwXNIG6WVUp0TbDgMs5a72tlmd7NtO0VEMoBbrR9f70pZwaiobWDN7rJu30upKUdqEgOy0vXMQSnVacGGg8NaVrazTeBrale7+zyGP2C+BJ5oayMRmWN1o11VWlra6Tdbvv0w9Y2Gs3rIJaWAwnztsaSU6ryYuglORP4DuAooBy43xrQ5a40x5gljTJExpig3t\/Pf+heXlJKenMj4oX06XUYscrucbCutoL4xmJ7FSin1z4INh8BZQWY72wTOLjr1dVVEbgPutd7rfGPMxs6UE6pij5fJw7NJTeq+Q2a0pjDfQX2jYae3vZM9pZRqXbDhsNNaDmlnm0HNtg2aiPwY+B1QDVxojPks1DI6Y29ZFdu9lT2qvSHg5DAa2iitlApdsOEQ6Fo6RkTS29hmQrNtgyIic4E\/4L\/r+ttWt9io6N87nbd\/fCYXndY\/Wm8ZNSNyHSQIbNF2B6VUJwQVDsaYPcAaIAX4bvP1IjId\/z0JB4Cgv\/WLyI34h96oBS4xxvwj2NeGQ0KCcOqA3uQ6e0YX1qbSkhMZ2jdTpwxVSnVKKA3SD1jLh0RkZOBJEcnD38MI4MGmYyuJyC0isllEnm9emIjMtl5XC8w0xvxfyLVX7dIxlpRSnRX0wHvGmAUi8jj+oTLWi8g\/ODnwXi\/gTfxnAU3lAIX4zyhOEJGvAX8GBNgBfE9EvtfK23qNMf8WbB3VP3PnO3n\/ywPU1Dd26zkqlFLRF9KorMaYm0VkCTAXmA4kApuBp4HHgxyRFSALfzAAjLIerdkFaDh0UqHLic\/AttIKxvTvbXd1lFLdSEjhAGCMeRl4Ocht7wHuaeX5TzgZDipC3C5\/7+KSg8c1HJRSIYmpm+BUeA3NySQ5UdhyQLuzKqVCo+HQgyUnJjAi16GN0kqpkGk49HBul1MH4FNKhUzDoYcrzHey72g1FbUNdldFKdWNaDj0cAV5\/kZpj15aUkqFQMOhhyvMD4yxpOGglAqehkMPN6hPBmnJCdpjSSkVEg2HHi4hQXQYDdVjLNt+mMseX8qm\/cfsrkqPp+EQBzQcVE9QUdvAz177gtW7ypj15DK+\/EoDIpI0HOKA2+Xg0PFayirr7K6KUp324N838VV5Nf\/zvdNIT05k1rxlbNhXbne1eiwNhzhwcuIfPXtQ3dPSbV5eXLaba6cOY+bpA3llzhQyU5K4Yt5yDYgI0XCIA9pjSXVnVXUN\/Pz19Qzpm8G\/\/b9CAAb3zeCVOZNxpCYx68llrN+rARFuGg5xIL9XGs60JJ0VTnVLv\/2\/Lew+UsVDl40jPeXk0PODsv0B0Ss9mVnzlvHFnqP2VbIH0nCIAyJCocvZbeaT\/nzPUd5Ys9fuaqgYsGrnEZ5dupMrpwxh8vC+LdYPys7g1RumkJWRzA\/nLWft7jIbatkzaTjEiQKrx5Ixxu6qtKu8qp7rn1vFba99wR8+9NhdHWWjmvpGbl+wjgFZ6dxxXltTvsCArHRenTOFPpkpXPnUCtZoQISFhkOcKHQ5OFpVT+nxWrur0q4H39tMWVUdMwpzefiDEh77ZKvdVVI2efiDErZ7K3nosnFkprY\/9Uz\/rHRevWEy2Q5\/QKzedSRKtey5NBzihNtqlI7ldoeVO48wf8Vurp06lKeumsC3T+vPb97bwrzi7XZXTUXZ2t1lzCvezg8mDmLqyJygXtOvt\/8MIteZypVPrWDVTg2IrtBwiBOFVnfWWB2+u67Bx11vrGdAVjo\/PddNYoLw8OWnccHYftz3ziae+XSH3VVUUVLb4L+c5OqVxp3fOiWk1+b3TuOVOZNx9UrjyqdXsGKHBkRnaTjEib6OVHIcKXhitFH6z4u24TlUwX2XnEpGiv8SQlJiAr\/\/\/tf4lzEu\/vOtL3lh2S6ba6mi4Q8fevAcquCBS8fSKy055Ne7evkDIr93Glc\/s4Ll2w9HoJY9n4ZDHCnIc8bkZaXtpRU88vFWLhjXj2+MyvundcmJCTzygzM455Q8\/uPNDcxfsdumWqpoWL+3nD8t2s53xg9kRmFexy9oQ54VEP2z0rn6mZV8tk0DIlQaDnGkMN+J5+BxfL7Y6bFkjOHuhRtITUrgVxeNbnWblKQEHr3iDGYU5nLXwvX8ZdWeKNdSRUNdg49\/X\/AFfTNT+I8LWv9bCEWeM435syczsE861zy7gqVbvWGoZfzQcIgjbpeTyrpG9h2ttrsqJ7y+Zh+fbT\/MneefQp4zrc3tUpMS+dMPx3PmyBxuf30dC9fqfRA9zWOfbGXzgeP8euZYemeEfjmpNbnOVObPmczg7AyufW4ln2pABE3DIY4U5vtnhYuVYTQOV9Ry3ztfUjSkD9+fMKjD7dOSE3niR0VMHtaXn732BX\/74qso1FJFw6b9x\/jjR1u5+Gv9OXe0K6xl5zhSmT97MkP7ZnLtsysp9pSGtfyeSsMhjhScGIAvNhqlf\/3OJiprG3jg0rEkJEhQr0lPSeSpq4soGpLNT1\/9nL+v3x\/hWqpIq2\/0X07KykjmnovGROQ9+jpSeXn2ZIblZHLdc6tYVKIB0RENhzjSKy2Zfr3TYuLMYYnHyxtr93Hj9BEnQitYGSlJPH3NBL42KIsfz1\/L+xsPRKiWKhqeWLydDfuO8V8Xn0qfzJSIvU92ZgrzZ09mZK6D2c+v4pMthyL2Xj2BhkOccbuctt\/rUFPfyN1vrmdYTiZzvzGyU2U4UpN49poJjBnQm7kvr+GjzQfDXEsVDZ6Dx\/nff3j41th8zh\/bL+Lv1yczhZeun0RBnoM5z6\/m480aEG3RcIgzhflOtpZW0NDos60Oj3zkYdfhKn59yamkJSd2\/II2ONOSef7aiYzK78WNL6zRSwXdTKPP8O8L1pGZmsi9F58atfcNBIQ738ENL6zmw036xaI1Gg5xxu1yUtfgY9eRKlvef8uB4\/x50XYuO2MgXw9yWIT29E5P5oXrJjIyz8Gc51dpb5Ru5Kkl2\/l8z1Hu+fYYchypUX3vrIwUXrpuMqP6ObnxxdX840sNiOY0HOJMYBgNjw3tDj6f4a6F63GmJXH3BaENi9CerIwUXrx+ktXYqDc8dQfbSyv43fslnDvaxbdP629LHXpnJPPCdZMY3a8XN720WtuumtFwiDMj8xyIwJYD0e+x9PKK3azeVcYvLhhNdpgbHrMz\/QExqE8G1z23kpU66FrM8vkMty9YR2pSAr++5FREguupFgm905N54fpJjOnfm5tfWsN7GzQgAjQc4kx6SiKDszOi3mPp4LEaHvr7ZqaO7MulZwyIyHvkOFJ5afYk\/5g6T69g9a7uP65\/RW0Dzy3daXsngnB67rOdrNpVxi8vGkNer7ZvfIyWXmnJPH\/dRMYO7M0tL6\/R7tEWDYc45HZFf4yl\/3xrI3WNPn59ydiIflMMDJmQ60zl6qdXdNupI6vrGnli8TamPfQRv\/rbRmY+9mmP+Fa763Alv3lvCzMKc7ksQl8SOqOX1bnhtEFZ3DJ\/Le+s04DQcIhDhS4nO7yV1DY0RuX9Ptx0kHfXH+DWswsYmpMZ8fdz9Urj5dmTycpM5kdPLWfDvu4z+XxtQyPPf7aT6b\/9mPvf3czYgVk8e80EClz+htNHPvTE\/Gx+bfH5DHe8vo6kBOGBSyP7JaEznGnJPHftRE4flMWtr6zlrTi\/A1\/DIQ4VuBw0+gw7vJURf6\/K2gZ++deNuF0OZk8bHvH3C+iflc7L10\/GmZbMD59azpdfHYvae3dGfaOPV1fu5pv\/vYhf\/nUjQ3Myee2GKTx\/7URmFObx6pzJzDx9AL\/7oIRbX\/mc6rroBHs4vbxiN8u2H+HuC06hX+90u6vTKkdqEs9eO5Hxg\/vwk1fW8tfP99ldJdtoOMShwvzoTfzz8Acl7DtazQOXjiUlKbp\/boOyM5g\/ezLpyYn88KnlMXndvtFneHPtPs59eBF3vL6eHGcqL1w3kVfnTGbisOwT26UlJ\/Lw5adxx3mjeHvdV1z+5884UF5jY81Ds7esigfe3cSZI3P4XhDjaNnJkZrEM9dMoGiof4iWeA0IDYc4NDzHQVKCRLxRev3ecp75dAdXTBrM+CHZHb8gAgb3zeDl2ZNJShCumLeMrYdiIyCMMby3YT\/n\/+9i\/vXVz0lPSWLelUW8efPXmVaQ2+olFxHhphkjePJHRWwvreCiPy5h7e7Yb3Q3xnDnG+sxEJOXk1qTad2BP3GYPyDicRRgDYc4lJKUwLCczIh2Z21o9HHnwnX0daRy+3mjIvY+wRiWk8n8OZMB4QdPLmd7qX0DDxpj+HjzIS764xJufHENjT7Do7PO4J0fn8k5o11BfXCeM9rFGzdPJS05ge89sYw318b2N9vXVu2h2OPlzvNHMSg7w+7qBC0jJYlnrp7I5OF9ue21L1iwOr4CQsMhTrnznRE9c3h26U427DvGPReNoXd6eMbm74oRuQ7mz56Ez2eY9eRydh2OfHtLc0u3erns8aVc8+xKyqvr+d13T+P9n07ngnH9gh6VNqAw38lf557J6YOy+NdXP+eh9zbH1CROAfvLq7nv7U1MHp7NFZOG2F2dkKWnJPLUVROYOiKHf1\/wRVxNNKXhEKfceU72lFVRVdcQ9rL3Ha3m4Q9K+OaoPL41Nj\/s5XdWgcvJS7MnUdvQyA+eWMaeKA0hsnrXEWY9uYxZ85azv7yG+2eO5aOfzeCy8QNJDDEUmsrOTOGF6yYxa9JgHv9kG3NeWEVFbfh\/n51ljOGuN9bT4DM8dNm4kAMwVqSnJDLvqqITE029tjI+AkLDIU4V5jswBrYeCu8lFmMMv3xzAwD3Xjwm5q4vj8rvxYvXT6KyrpEfPLksorPibdhXzjXPrOCyxz+j5OBxfnnhaD7+txnMmjSY5MTw\/NdLse4yvvfiMXy8pZRLH\/uU3YftGTeruYVr9\/HxllL+\/V8KGdI38l2YIyktOZEnryxiWkEut7++Li7mMtdwiFNuV2R6LP19wwE+3HyI2851M7BPbF5fHtO\/Ny9eN4ny6npmPbks7L1+Sg4e56YXV3PhI0tYs\/sod5w3isW3f4NrzxzWpVFo2yIiXDllKM9fO5GDx2q5+NElLNtu7\/hSh47V8J9vfcn4IX246utDba1LuPhnIhzPdHcud76xnt\/\/o4T3Nx5g6VYvX+w5ytZDFRw8VkNFbUNMXuILlXTXG2qaKioqMqtWrbK7Gt1Ko89wyi\/f46opQ7g7DJO5A5RX13POw4tw9UrlzZunkhSmb8eRsnZ3GT96agW5zlRenTO5y0M57PBW8r\/\/KOGvX3xFZkoS108bxrVnDqNXWvTaXHZ4K7nuuZXsPlzFvRefyqxJg6P23gHGGG54YTWLSkp59yfTGJHriHodIqmmvpG5L63hww7mgshMSSQzNQlHahKOtCQyU5Ksn63n05JwnHjOv8xMTcSZZv075eTzkeoGLiKrjTFFra1Lisg7qpiXmCAU5DnYEsYpQ3\/z3mYOV9TyzNUTYj4YAE4f3Idnr5nAlU+v4AdPLuOVOVPIdYY+dPTesioe+XArC9bsJTlRuOGsEdxw1vCIzmrWlmE5mSy8eSq3zl\/LXQvXU3LwOL+44JSo\/j7eXref9788yJ3nj+pxwQD+M4h5VxWx63AVFbUNHK9poLK2gcq6Bipq\/f+uqGmgorbR\/++6k8\/tLauisq6BytpGKmobqGsIbl6VlKQEKygST4SGwwqRgjwH\/3qOO+z7qeEQx9wuZ9guP6zedYSXlu\/mujOHceqA3mEpMxqKhmbzzNUTuPqZlVwxbxnzZ0+mb5BzCxw8VsOjH29l\/ordCMKVU4Zw04wR5DntHUyud3oyT189gQfe3cS8JTvYeqiCR2edQe+MyJ\/BHK6o5Vd\/28hpg7K4Pop3xEebiIRlKJi6Bp8\/OKxw8f+7kYqahpPPWwFz8jl\/6ByprGP34SrqgwyYUGk4xDG3y8nCtfsor67vUnfTugYfd76xngFZ6dx2bvi\/wUTapOF9eeqqIq55diVXzFvO\/NmT2\/3Wf6Syjj8t2sZzS3fS6DNcPmEQt3xjJP2zYmdIiMQE4RcXjsad7+Tuheu55LFPefLKIkbmRfab\/C\/\/tpGKmgZ++51xXeqJFS9SkhJISUqx5SyzI7F\/7q8ipjDf\/0HR1Yl\/nizeTsnBCu69eAyZqd3z+8bXR+Yw76oitnsr+eFTyymvqm+xTXl1Pb97fwvTHvqIecXbuWBcPz762Qzunzk2poKhqcuLBjF\/9mSO19Qz87FP+WRL5OZMfm\/Dft5Zt59bzx55osOD6r40HOLYiR5LXQiHnd5K\/vdD\/wTxZ5\/iClfVbDGtIJc\/\/2g8noMVXPn0co7V+AOisraBRz\/eyrSHPuKRj7YyY1Qe7\/\/0LB6+\/GsM7hubPbKaKhqazZtzpzKwTwbXPruSecXbwz6ya1llHb94cyNj+vfihukjwlq2skf3\/JqnwmJAVjqZKYmUdLI7qzGGu99cT2piAr+6aEyYa2ePbxTm8dgVZ3DTS6u56ukVnH9qPn9atJ0jlXWcc0oet51byOj+veyuZsgG9slgwY1T+NlrX3DfO5vYcuA49808ldSk8HStvfftLzlaVcfz104M2z0cyl4aDnFMRChwOSnpZI+lhWv38enWw\/zXJafiioEZvcLlnNEuHvnBGcx9eQ1rdx9lWkEOt53r5vTBfeyuWpdkpibx2BVn8PsPPfzhQw87vJX86UfjyQmyAb4tH246yMK1+\/jJ2QXdMjhV6zQc4lyhy8k\/Nh0M+XVHKuu4751NjB\/ShysmRr8vfaSdd2o+r8yZjOC\/LNNTJCQIt53rxu1y8G9\/+YKL\/+hvqO7sh3p5dT13LVzPqHwnc78xMsy1VXbS87845853criyDm9FbUivu\/\/dTRyrruf+mWO77Zg5HZkwNLtHBUNTF47rz19u+DqNPsNljy\/t9BSk9739Jd6KOn77ndOiPl+Hiiz9bca5QqtROpR2h6VbvSxYvZcbpg8\/MXGQ6n7GDuzN326ZSmF+56YgXVRSyl9W7+WGs4YzdmD3ubdFBUfDIc65re6swQ7fXVPfyN1vbmBo3wx+\/M2CSFZNRUFerzRemTOZS0OcgvR4TT13vr6OkXkObj1b\/w56Im1ziHO5jlSyMpKDHkbj0Y+3ssNbyUvXT4rIIHIq+tKSE\/nd5afhznfy0Hub2emt5Mkri8jv3XYngwf+vpkDx2p4\/aav699BD6VnDnFORHC7gpv4x3PwOH9atI1LTx\/A1JE5UaidihYR4cbpI5h3ZcdTkC7d6uVla6iU7t6DS7VNw0FR6HJScuB4u9ebfT7\/PMCO1CTuvuCUKNZORdPZp7hYOHcq6cmJrU5BWlnbwB1vrGNYTiY\/+3+FNtVSRYOGg8Kd7+R4bQP725nX4JWVe1i1q4y7vnVK0APTqe7J7XLy5typnDG45RSkv\/2\/Lewtq+Y33xmnl5N6OA0HdbLHUhuXlg4dr+GBv29iyvC+fGf8wGhWTdkkMAXpFU2mIP148yGeXbqTq6YMZUIP7eKrTtIGaYXbdbLH0ozCvBbr733rS2obfPx65qkxN+2nipzkxAR+PXMso\/Kd3PPWl\/xj0yEGZadz+3l6OSkeaDgosjJSyHOmsuVAyx5LH28+xNvr9vOzc90M74ETt6iO\/WjKUIbnOrj\/3U386qIxZKTox0Y80N+yAqAwv2WPpaq6Bn7x5gYK8hw60macmzoyh3dunWZ3NVQUhdzmICKzRKRYRMpFpEJEVonIXBHpVPuFiJwnIu+LyBERqRKRDSJyt4hoq2cUuV1OPIeO\/9PE6P\/zQQn7jlZz\/6VjdWgEpeJMSP\/jReRR4CWgCCgGPgDcwB+BBaEGhIjcDvwd+CawBngHyAPuAz4RkdgfLL+HKHQ5qan3saesCoAN+8p5+tOd\/GDiYG18VCoOBf1hLiKXATcDB4BxxpgLjTEzgQJgEzAT+HEI5RUBDwJVwFRjzDnGmO8Cw4HFwGTg18GWp7qmwGqU3nLgOI0+w10L19MnI4WfnzfK5poppewQyjf9O63lHcYYT+BJY8xB4Cbrx5+HcPbwc0CAh4wxy5uUVwFcA\/iAm0UkK4Q6qk4qaNKd9bmlO1m3t5xfXTQ6KpPSK6ViT1Af5CIyEBgP1AF\/ab7eGLMI2Afk4\/\/G31F5KcD51o8vtVLeduAzIAX4VjB1VF3jSE1iYJ90Fpd4+d37W5hRmMuF4\/rZXS2llE2C\/ZZ\/urXcaIypbmOblc22bU8hkAEcMcZsC0N5KgwKXU5W7DyCz8B\/Xaz3NCgVz4INh2HWclc72+xutm0w5e1uZ5tQylNh4LbmZrjtXDeDsrUvgFLxLNj7HAJ3P1W2s03gDqpgZn\/pcnkiMgeYAzB4cM+bptIOl53hHxrjmqlD7a2IUsp23bbzujHmCWNMkTGmKDc31+7q9Agj8xzccd4okhK77Z+FUipMgv0UCHyLz2xnm8DZQDBTioW7PKWUUmEUbDjstJZD2tlmULNtgymvvetBoZSnlFIqjIINh7XWcoyIpLexzYRm27ZnM1ANZItIW4P2TAyhPKWUUmEUVDgYY\/bgH94iBfhu8\/UiMh0YiP\/u6c+CKK8O\/7AZAFe0Ut5wYAr++yreCaaOSimlwieUlscHrOVDIjIy8KSI5AGPWT8+aIzxNVl3i4hsFpHnWynvQcAAd4jIxCavcQBPW3V7zBhzNIQ6KqWUCoOgw8EYswB4HP9d0OtF5C0ReQPwAKOBN\/EPwNdUDv4b3lq0LRhjVuIfQiMDWGqNzPoasA2YDiwH7g51h5RSSnVdSPM5GGNuFpElwFz8H+CJ+NsPngYeb3rWEGR5vxGRdcDP8LdZpAHbgT8A\/22MqQ2lPKWUUuEhxpiOt4pxRUVFZtWqVXZXQymluhURWW2MKWp1XU8IBxEppf2hPTqSA3jDVB2lxzMS9JiGlx5PvyHGmFbvIu4R4dBVIrKqrfRUodPjGX56TMNLj2fHdJwEpZRSLWg4KKWUakHDwe8JuyvQw+jxDD89puGlx7MD2uaglFKqBT1zUEop1YKGg1JKqRbiIhxEJFNErhCR34vIpyJSKSJGRN4OQ9mFIvKiiHwlIrUisktEHheRfuGoe6wL5\/6LyFDr99Le4\/uR2I9oEpFZIlIsIuUiUiEiq0Rkroh06v+jiJxnDT9zRESqRGSDiNwtIqnhrnssCtfxFJF7Ovjbq4nUPsSikIbP6MYKgBfDXag1Gu3fgXT8o9YuBk4DbgQuE5EzjTEl4X7fWBHB\/a8EFrSxbkdn6horRORR4GagBvgQqAfOxj8u2dki8p1QhqERkduBh4BG4BOgDP\/QNvcBF4rI2caYqrDuRAwJ9\/G0fAF83srz9V2oavdjjOnxD2AE8BRwE\/55Im7APyLs210oMxPYb5VzS7N1\/209vxqr0b+nPSKx\/8BQ63U77d6\/CB2zy6z92w8UNHneBXxprftJCOUVAT78YTqpyfMOYJFV3v\/Yvd\/d6HjeY73mHrv3LRYetlfAlp2Gq8MQDrdYZXzUyrpEYKu1\/lt272+EjmHY9z8OwmGVtX9XtrJuepMPuoQgy1tgveaXrawbjv9sohbIsnvfu8nx1HBo8oiLNocIucRavtR8hTGmEXil2XY9zSXWMl73PyQiMhAYj38Cq780X2+MWQTswz8k\/uQgyksBzrd+bO13sB3\/xFspwLc6XfEYFe7jqVrScOi8063lyjbWr2y2XU8Tyf3PFJE7ReTPIvIHEbnZ+jDozgLHYaMxprqNbUI5ZoX450I5YozZFobyuptwH8+mzhCRh0TkCRF5UERmWmEcV+KlQTqsRKQXkG392NZosLut5bDI1yi6orD\/OcD9zZ77vYj8FviFsa4BdDOB49De6MGhHLPANrvb2abH\/g0S\/uPZ1EXWo6m9IvJD64wkLuiZQ+c4mvy7so1tKqylM8J1sUOk9r8W\/7AG5wID8H8zHou\/N44B7gL+K6Saxo7AMWvreEFoxyzc5XU3kdj\/bcCdwNeA3kAu8E38jfsDgXdFZFzINe2mYv7MQUR+A3y7Ey892xizL9z16Qli9ZgaY\/bj70nW1Abg5yLyKfA34HYRecwY81Wk6qHikzHmhVae\/hj4WEQW4O8ddT9wYVQrZpOYDwegP\/7rq6FKDndFmqho8u9MoLyVbQLfbI5HsB6d1dVjGvX9N8a8JSJr8V8\/Pgd4PhzlRlHgmGW2s00oxyzc5XU30d7\/e\/GHw7kikmyM6fH3PMT8ZSVjzA+NMdKJx84I1ukY\/puNAIa0sdkgaxmxenRWV4+pjfu\/2VoOCGOZ0bLTWrZ1vCC0YxbYZnCYyutudlrLcB3PjgT+9lLwt4n1eDEfDjFsjbWc0Mb6idZybRTqYgc79r+vtaxod6vYFDgOY0QkvY1tJjTbtj2bgWogW0RGtLFNT\/4bDPfx7EjfJv\/ujn9\/IdNw6Ly\/Wssrmq8QkUQgMAbQwqjVKLqiuv8ikg9Ms35sq\/tszDLG7MEfqCnAd5uvt4YiGQgcwH9\/Qkfl1eEfugRa\/x0MB6bgvw\/gnU5XPEaF+3gG4XJrucUY0xMv07Vk9114djwI8g5p\/N+8NgObW1nn4OTwEXObrfut9fwaeu7wGZ3af\/yXhDZbjwHN1s1u\/pz1\/GhghVXmUrv3vQvH7DucvGt3ZJPn84CNtDLcA\/470TcDz7dS3gRODp8xsdnv5hN6\/vAZYTue+C\/PzQJSmz0vwI+AKqu8G+ze76gdX7srEMU\/pIXAMuuxzfpFlzV5bhlwQbPXzLC2M22UOb3JH80qYD4nx3QpBQrt3u8IH9OQ95+TQ2QYYGizdZ9bH3Zf4B8a4hX8Zwn11vabgIF273cXj9lj1r5UA28Bb+Bv0DfW32his+3vsdZ90kZ5t1vrG4D3gdeAg9Zzy4AMu\/e5OxxP\/N1XDXDMCtaXrfK2N\/l7fcTu\/Y3qsbW7AlH8I9rZ5Jfc1uPqZq9pNxysbQrxD19wAH8\/\/d3An4B+du9zlI5rSPvfQThcZ4XCFvzBXQ8cxt\/P\/CdAut37G6ZjNgv41PogqsQ\/QOFcWhkDqKNwsLY5D\/jAOmbV+L81302zb8E99RGO44m\/TeE3+Luu7sH\/pafG+tx4Bfim3fsZ7YdOE6qUUqoFbZBWSinVgoaDUkqpFjQclFJKtaDhoJRSqgUNB6WUUi1oOCillGpBw0EppVQLGg5KKaVa0HBQSinVwv8He+iUKGB9y5AAAAAASUVORK5CYII=\n",
                    "mimeType":"image\/png",
                    "width":0,
                    "height":0,
                    "type":"plot"
                  }
                ]
              }
            ],
            "meta":{
              
            },
            "language":"PYTHON",
            "inputCollapsed":false,
            "outputCollapsed":false
          }
        ]
      }
    ],
    "packageManager":"pip",
    "baseEnvironment":"default",
    "packages":[
      
    ],
    "kernelType":"JUPYTER",
    "language":"PYTHON"
  }
}